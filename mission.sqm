version=54;
class EditorData
{
	moveGridStep=1;
	angleGridStep=0.2617994;
	scaleGridStep=1;
	autoGroupingDist=10;
	toggles=513;
	mods[]=
	{
		"3denEnhanced"
	};
	class ItemIDProvider
	{
		nextID=45;
	};
	class MarkerIDProvider
	{
		nextID=3;
	};
	class Camera
	{
		pos[]={2467.4419,85.519836,5660.7588};
		dir[]={-0.81439972,-0.51874161,0.26011577};
		up[]={-0.49414867,0.85493112,0.15782896};
		aside[]={0.30425352,1.4901161e-008,0.95259118};
	};
};
binarizationWanted=0;
sourceName="Spawner";
addons[]=
{
	"A3_Characters_F",
	"A3_Characters_F_Mark",
	"A3_Modules_F_Curator_Curator",
	"A3_Structures_F_Civ_Camping",
	"ace_dragging",
	"A3_Structures_F_EPC_Items_Electronics",
	"A3_Modules_F",
	"A3_Structures_F_Mil_Fortification",
	"A3_Ui_F",
	"A3_Structures_F_Mil_Helipads",
	"A3_Misc_F_Helpers"
};
class AddonsMetaData
{
	class List
	{
		items=10;
		class Item0
		{
			className="A3_Characters_F";
			name="Arma 3 Alpha - Characters and Clothing";
			author="Bohemia Interactive";
			url="https://www.arma3.com";
		};
		class Item1
		{
			className="A3_Characters_F_Mark";
			name="Arma 3 Marksmen - Characters and Clothing";
			author="Bohemia Interactive";
			url="https://www.arma3.com";
		};
		class Item2
		{
			className="A3_Modules_F_Curator";
			name="Arma 3 Zeus Update - Scripted Modules";
			author="Bohemia Interactive";
			url="https://www.arma3.com";
		};
		class Item3
		{
			className="A3_Structures_F";
			name="Arma 3 - Buildings and Structures";
			author="Bohemia Interactive";
			url="https://www.arma3.com";
		};
		class Item4
		{
			className="ace_dragging";
			name="ACE3 - Dragging";
			author="ACE-Team";
			url="http://ace3mod.com/";
		};
		class Item5
		{
			className="A3_Structures_F_EPC";
			name="Arma 3 Win Episode - Buildings and Structures";
			author="Bohemia Interactive";
			url="https://www.arma3.com";
		};
		class Item6
		{
			className="A3_Modules_F";
			name="Arma 3 Alpha - Scripted Modules";
			author="Bohemia Interactive";
			url="https://www.arma3.com";
		};
		class Item7
		{
			className="A3_Structures_F_Mil";
			name="Arma 3 - Military Buildings and Structures";
			author="Bohemia Interactive";
			url="https://www.arma3.com";
		};
		class Item8
		{
			className="A3_Ui_F";
			name="Arma 3 - User Interface";
			author="Bohemia Interactive";
			url="https://www.arma3.com";
		};
		class Item9
		{
			className="A3_Misc_F";
			name="Arma 3 - 3D Aids and Helpers";
			author="Bohemia Interactive";
			url="https://www.arma3.com";
		};
	};
};
dlcs[]=
{
	"Mark"
};
randomSeed=3511566;
class ScenarioData
{
	author="Jonipetteri";
	disabledAI=1;
	class Header
	{
		gameType="Coop";
		minPlayers=1;
		maxPlayers=12;
	};
};
class CustomAttributes
{
	class Category0
	{
		name="Multiplayer";
		class Attribute0
		{
			property="ENH_dynamicSkill";
			expression="if (!is3DEN && _value # 0 && isServer) then      {        _value params        [          '_enable',          '_skillMinBLUFOR',          '_skillAimMinBLUFOR',          '_skillMaxBLUFOR',          '_skillAimMaxBlUFOR',          '_skillMinOPFOR',          '_skillAimMinOPFOR',          '_skillMaxOPFOR',          '_skillAimMaxOPFOR',          '_skillMinINDFOR',          '_skillAimMinINDFOR',          '_skillMaxINDFOR',          '_skillAimMaxINDFOR'        ];        [          true,          [            [WEST, _skillMinBLUFOR, _skillAimMinBLUFOR, _skillMaxBLUFOR, _skillAimMaxBlUFOR],            [EAST, _skillMinOPFOR, _skillAimMinOPFOR, _skillMaxOPFOR, _skillAimMaxOPFOR],            [INDEPENDENT, _skillMinINDFOR, _skillAimMinINDFOR, _skillMaxINDFOR, _skillAimMaxINDFOR]          ]        ] call BIS_fnc_EXP_camp_dynamicAISkill;      }";
			class Value
			{
				class data
				{
					class type
					{
						type[]=
						{
							"ARRAY"
						};
					};
					class value
					{
						items=13;
						class Item0
						{
							class data
							{
								class type
								{
									type[]=
									{
										"BOOL"
									};
								};
								value=0;
							};
						};
						class Item1
						{
							class data
							{
								class type
								{
									type[]=
									{
										"SCALAR"
									};
								};
								value=0.5;
							};
						};
						class Item2
						{
							class data
							{
								class type
								{
									type[]=
									{
										"SCALAR"
									};
								};
								value=0.30000001;
							};
						};
						class Item3
						{
							class data
							{
								class type
								{
									type[]=
									{
										"SCALAR"
									};
								};
								value=0.80000001;
							};
						};
						class Item4
						{
							class data
							{
								class type
								{
									type[]=
									{
										"SCALAR"
									};
								};
								value=0.5;
							};
						};
						class Item5
						{
							class data
							{
								class type
								{
									type[]=
									{
										"SCALAR"
									};
								};
								value=0.5;
							};
						};
						class Item6
						{
							class data
							{
								class type
								{
									type[]=
									{
										"SCALAR"
									};
								};
								value=0.30000001;
							};
						};
						class Item7
						{
							class data
							{
								class type
								{
									type[]=
									{
										"SCALAR"
									};
								};
								value=0.80000001;
							};
						};
						class Item8
						{
							class data
							{
								class type
								{
									type[]=
									{
										"SCALAR"
									};
								};
								value=0.5;
							};
						};
						class Item9
						{
							class data
							{
								class type
								{
									type[]=
									{
										"SCALAR"
									};
								};
								value=0.5;
							};
						};
						class Item10
						{
							class data
							{
								class type
								{
									type[]=
									{
										"SCALAR"
									};
								};
								value=0.30000001;
							};
						};
						class Item11
						{
							class data
							{
								class type
								{
									type[]=
									{
										"SCALAR"
									};
								};
								value=0.80000001;
							};
						};
						class Item12
						{
							class data
							{
								class type
								{
									type[]=
									{
										"SCALAR"
									};
								};
								value=0.5;
							};
						};
					};
				};
			};
		};
		class Attribute1
		{
			property="RespawnTemplates";
			expression="true";
			class Value
			{
				class data
				{
					class type
					{
						type[]=
						{
							"ARRAY"
						};
					};
					class value
					{
						items=1;
						class Item0
						{
							class data
							{
								class type
								{
									type[]=
									{
										"STRING"
									};
								};
								value="None";
							};
						};
					};
				};
			};
		};
		nAttributes=2;
	};
	class Category1
	{
		name="Scenario";
		class Attribute0
		{
			property="ENH_AddObjectsToZeus";
			expression="    if (!is3DEN && isServer && _value && !(allCurators isEqualTo [])) then    {      [] spawn      {        scriptName 'ENH_Attribute_AddObjectsToZeus';        while {true} do        {          {          _x addCuratorEditableObjects            [              entities [[], ['Logic'], true],              true            ];          } count allCurators;          sleep 60;        };      };    }";
			class Value
			{
				class data
				{
					class type
					{
						type[]=
						{
							"BOOL"
						};
					};
					value=1;
				};
			};
		};
		class Attribute1
		{
			property="ENH_SPR";
			expression="if (!is3DEN && _value # 0 > 0 && !isMultiplayer) then      {        ENH_SPR_Ruleset = _value param [0, 0];        ENH_SPR_Delay = _value param [1, 20];        ENH_SPR_CanDie = _value param [2, false];        ENH_SPR_RestoreLoadout = _value param [3, false];        ENH_SPR_OnRespawnCode = compile (_value param [4, '']);        ENH_SPR_Positions =        [          allMapMarkers select {'respawn_east' in toLower _x} apply {getMarkerPos _x},          allMapMarkers select {'respawn_west' in toLower _x} apply {getMarkerPos _x},          allMapMarkers select {'respawn_guerilla' in toLower _x} apply {getMarkerPos _x},          allMapMarkers select {'respawn_civilian' in toLower _x} apply {getMarkerPos _x}        ];        {          _x setVariable ['ENH_SPR_OriginalSide', side group _x];          _x setVariable ['ENH_SPR_OriginalLoadout', getUnitLoadout _x];          _x addEventHandler ['handleDamage',          {            params ['_unit', '', '_damage', '', '', '_index'];            if (!alive _unit || lifeState _unit isEqualTo 'INCAPACITATED') exitWith {0};            if (_unit getVariable ['ENH_SPR_Tickets', 0] == 0) then            {              _unit removeEventHandler ['handleDamage', _thisEventHandler];              _damage;            };            if (ENH_SPR_CanDie && _index in [1, 2] && _damage >= 1) exitWith            {              _unit removeEventHandler ['handleDamage', _thisEventHandler];              1;            };            if (_index < 8 && (_damage min 0.95) == 0.95) then            {              setAccTime 1;              _unit allowDamage false;              _unit setCaptive true;              _unit setUnconscious true;              _unit setVariable ['ENH_SPR_Tickets', (_unit getVariable ['ENH_SPR_Tickets', 0]) - 1];              if (isPlayer _unit) then {enableTeamSwitch false} else {removeSwitchableUnit _unit};              moveOut _unit;              _unit spawn ENH_fnc_SPR_respawnTimer;            };            _damage min 0.95;          }];        } forEach (allUnits select {_x getVariable ['ENH_SPR_Tickets', 0] > 0});                ENH_fnc_SPR_respawn =        {          scriptName 'ENH_Attribute_SPR_Respawn';          params ['_unit'];          if (isPlayer _unit) then {enableTeamSwitch true} else {addSwitchableUnit _unit};          if (ENH_SPR_RestoreLoadout) then {_unit setUnitLoadout (_unit getVariable 'ENH_SPR_OriginalLoadout')};          private _sideID = (_unit getVariable 'ENH_SPR_OriginalSide') call BIS_fnc_sideID;          private _positions = ENH_SPR_Positions select _sideID;          if (_positions isNotEqualTo []) then          {            switch (ENH_SPR_Ruleset) do            {              case 3:              {                _unit setPos (([_positions, [], {_unit distance _x}, 'ASCEND'] call BIS_fnc_sortBy) select 0);              };              case 2:              {                _unit setPos selectRandom _positions;              };            };          };          _unit setUnconscious false;          _unit allowDamage true;          _unit setDamage 0;          _unit switchMove '';          _unit call ENH_SPR_OnRespawnCode;          _unit spawn          {            sleep 8;            _this setCaptive false;          };        };                ENH_fnc_SPR_respawnTimer =        {          scriptName 'ENH_Attribute_SPR_RespawnTimer';          params ['_unit'];          private _respawnTime = time + ENH_SPR_Delay;          if (isPlayer _unit) then          {            private _ctrlRespawnTimer = (call BIS_fnc_displayMission) ctrlCreate ['RscStructuredText',-1];            _ctrlRespawnTimer ctrlSetPosition [0.25, 0, 0.5, 0.06];            _ctrlRespawnTimer ctrlSetBackgroundColor [0, 0, 0, 0.1];            _ctrlRespawnTimer ctrlCommit 0;            ENH_SPR_OriginalVolume = [soundVolume, musicVolume, radioVolume, speechVolume, environmentVolume];            0 cutText ['', 'BLACK OUT', 0.3];            0.3 fadeSound 0;            0.3 fadeMusic 0;            0.3 fadeRadio 0;            0.3 fadeSpeech 0;            0.3 fadeEnvironment 0;            showChat false;            while {time < _respawnTime} do            {              _ctrlRespawnTimer ctrlSetStructuredText parseText format ['<t size=''1.25'' color=''#218a36'' align=''center''>%1</t>', [(_respawnTime - time), 'HH:MM'] call BIS_fnc_timeToString];              sleep 0.1;            };            ctrlDelete _ctrlRespawnTimer;            0 cutText ['', 'BLACK IN', 8];            8 fadeSound (ENH_SPR_OriginalVolume # 0);            8 fadeMusic (ENH_SPR_OriginalVolume # 1);            8 fadeRadio (ENH_SPR_OriginalVolume # 2);            8 fadeSpeech (ENH_SPR_OriginalVolume # 3);            8 fadeEnvironment (ENH_SPR_OriginalVolume # 4);            showChat true;            [              ['Respawned'],              [format ['GRID: %1', mapGridPosition _unit]],              [format ['Tickets left: %1', _unit getVariable 'ENH_SPR_Tickets']]            ] spawn BIS_fnc_EXP_camp_SITREP;          }          else          {            if ((side player getFriend (_unit getVariable 'ENH_SPR_OriginalSide')) >= 0.6) then            {              [                str _unit, 'onEachFrame',                {                  drawIcon3D ['\a3\Modules_f\data\portraitRespawn_ca.paa', [0.13, 0.54, 0.21, 0.8], ASLToAGL ((_this # 0) modelToWorldVisualWorld [0, 0, 1]), 1, 1, 0, str round ((_this # 1) - time), 2];                },                [_unit, _respawnTime]              ] call BIS_fnc_addStackedEventHandler;            };            sleep ENH_SPR_Delay;          };          [str _unit, 'onEachFrame'] call BIS_fnc_removeStackedEventHandler;          _unit call ENH_fnc_SPR_respawn;        };      }";
			class Value
			{
				class data
				{
					class type
					{
						type[]=
						{
							"ARRAY"
						};
					};
					class value
					{
						items=5;
						class Item0
						{
							class data
							{
								class type
								{
									type[]=
									{
										"SCALAR"
									};
								};
								value=0;
							};
						};
						class Item1
						{
							class data
							{
								class type
								{
									type[]=
									{
										"SCALAR"
									};
								};
								value=20;
							};
						};
						class Item2
						{
							class data
							{
								class type
								{
									type[]=
									{
										"BOOL"
									};
								};
								value=0;
							};
						};
						class Item3
						{
							class data
							{
								class type
								{
									type[]=
									{
										"BOOL"
									};
								};
								value=0;
							};
						};
						class Item4
						{
							class data
							{
								class type
								{
									type[]=
									{
										"STRING"
									};
								};
								value="";
							};
						};
					};
				};
			};
		};
		nAttributes=2;
	};
};
class Mission
{
	assetType="Free";
	class Intel
	{
		briefingName="Test, test, test.";
		timeOfChanges=1800.0002;
		startWeather=0.4322263;
		startWind=0.1;
		startWaves=0.1;
		forecastWeather=0.42375472;
		forecastWind=0.1;
		forecastWaves=0.1;
		forecastLightnings=0.1;
		wavesForced=1;
		windForced=1;
		year=2019;
		month=3;
		day=11;
		hour=8;
		minute=28;
		startFogDecay=0.014;
		forecastFogDecay=0.014;
	};
	class Entities
	{
		items=20;
		class Item0
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={2437.7109,77.238884,5696.9609};
						angles[]={0,4.1501784,0};
					};
					side="West";
					flags=7;
					class Attributes
					{
						name="p1";
						description=" @Joni";
						isPlayer=1;
					};
					id=1;
					type="B_Sharpshooter_F";
					atlOffset=0.00039672852;
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"STRING"
										};
									};
									value="Male09ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"SCALAR"
										};
									};
									value=0.94999999;
								};
							};
						};
						class Attribute2
						{
							property="ENH_setCaptive";
							expression="_this setCaptive _value";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"BOOL"
										};
									};
									value=1;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
			};
			id=0;
			atlOffset=0.00039672852;
		};
		class Item1
		{
			dataType="Logic";
			class PositionInfo
			{
				position[]={2438.9009,77.236267,5699.1821};
				angles[]={0,0,6.2826962};
			};
			id=2;
			type="ModuleCurator_F";
			atlOffset=2.5246506;
			class CustomAttributes
			{
				class Attribute0
				{
					property="ModuleCurator_F_Owner";
					expression="_this setVariable ['Owner',_value,true];";
					class Value
					{
						class data
						{
							class type
							{
								type[]=
								{
									"STRING"
								};
							};
							value="p1";
						};
					};
				};
				class Attribute1
				{
					property="ModuleCurator_F_Forced";
					expression="_this setVariable ['Forced',_value,true];";
					class Value
					{
						class data
						{
							class type
							{
								type[]=
								{
									"SCALAR"
								};
							};
							value=0;
						};
					};
				};
				class Attribute2
				{
					property="ModuleCurator_F_Name";
					expression="_this setVariable ['Name',_value,true];";
					class Value
					{
						class data
						{
							class type
							{
								type[]=
								{
									"STRING"
								};
							};
							value="";
						};
					};
				};
				class Attribute3
				{
					property="ModuleCurator_F_Addons";
					expression="_this setVariable ['Addons',_value,true];";
					class Value
					{
						class data
						{
							class type
							{
								type[]=
								{
									"SCALAR"
								};
							};
							value=3;
						};
					};
				};
				nAttributes=4;
			};
		};
		class Item2
		{
			dataType="Object";
			class PositionInfo
			{
				position[]={2435.7756,77.649536,5695.1655};
				angles[]={0,2.0527737,6.2826972};
			};
			side="Empty";
			flags=4;
			class Attributes
			{
			};
			id=3;
			type="Land_CampingTable_F";
		};
		class Item3
		{
			dataType="Object";
			class PositionInfo
			{
				position[]={2436.0923,78.209496,5695.7163};
				angles[]={0,0.91834724,6.2826972};
			};
			side="Empty";
			flags=4;
			class Attributes
			{
				name="enemymenu";
				disableSimulation=1;
			};
			id=4;
			type="Land_Laptop_device_F";
		};
		class Item4
		{
			dataType="Object";
			class PositionInfo
			{
				position[]={2445.2141,77.644936,5690.373};
				angles[]={0,2.0328541,6.2826972};
			};
			side="Empty";
			flags=4;
			class Attributes
			{
			};
			id=5;
			type="Land_CampingTable_F";
		};
		class Item5
		{
			dataType="Object";
			class PositionInfo
			{
				position[]={2444.906,78.204758,5689.8638};
				angles[]={0,5.5705323,6.2826962};
			};
			side="Empty";
			class Attributes
			{
				name="vehiclemenu";
				disableSimulation=1;
			};
			id=6;
			type="Land_Laptop_device_F";
			atlOffset=0.81515503;
		};
		class Item6
		{
			dataType="Group";
			side="West";
			class Entities
			{
				items=1;
				class Item0
				{
					dataType="Object";
					class PositionInfo
					{
						position[]={2438.1741,77.23793,5699.1426};
						angles[]={0,4.9810123,0};
					};
					side="West";
					flags=3;
					class Attributes
					{
						name="p2";
						description=" @joku muu";
						isPlayable=1;
					};
					id=8;
					type="B_Sharpshooter_F";
					atlOffset=2.5245132;
					class CustomAttributes
					{
						class Attribute0
						{
							property="speaker";
							expression="_this setspeaker _value;";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"STRING"
										};
									};
									value="Male09ENG";
								};
							};
						};
						class Attribute1
						{
							property="pitch";
							expression="_this setpitch _value;";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"SCALAR"
										};
									};
									value=0.94999999;
								};
							};
						};
						class Attribute2
						{
							property="ENH_setCaptive";
							expression="_this setCaptive _value";
							class Value
							{
								class data
								{
									class type
									{
										type[]=
										{
											"BOOL"
										};
									};
									value=1;
								};
							};
						};
						nAttributes=3;
					};
				};
			};
			class Attributes
			{
			};
			id=7;
			atlOffset=2.5245132;
		};
		class Item7
		{
			dataType="Logic";
			class PositionInfo
			{
				position[]={2452.3945,73.191566,5664.7354};
				angles[]={6.1269698,4.2646971,0.11696389};
			};
			areaSize[]={9.0435791,0,13.061888};
			flags=1;
			id=11;
			type="ModuleHideTerrainObjects_F";
			atlOffset=-0.10688782;
			class CustomAttributes
			{
				class Attribute0
				{
					property="#filter";
					expression="_this setVariable [""#filter"",_value]";
					class Value
					{
						class data
						{
							class type
							{
								type[]=
								{
									"SCALAR"
								};
							};
							value=15;
						};
					};
				};
				class Attribute1
				{
					property="#hideLocally";
					expression="_this setVariable [""#hideLocally"",_value]";
					class Value
					{
						class data
						{
							class type
							{
								type[]=
								{
									"BOOL"
								};
							};
							value=0;
						};
					};
				};
				nAttributes=2;
			};
		};
		class Item8
		{
			dataType="Object";
			class PositionInfo
			{
				position[]={2456.0295,74.023888,5658.0117};
				angles[]={6.228241,2.8842878,0.092238374};
			};
			side="Empty";
			flags=4;
			class Attributes
			{
			};
			id=12;
			type="Land_HBarrier_5_F";
		};
		class Item9
		{
			dataType="Object";
			class PositionInfo
			{
				position[]={2450.6782,73.383522,5656.4473};
				angles[]={0.010000871,2.8842878,0.069885373};
			};
			side="Empty";
			flags=4;
			class Attributes
			{
			};
			id=13;
			type="Land_HBarrier_5_F";
		};
		class Item10
		{
			dataType="Object";
			class PositionInfo
			{
				position[]={2445.1792,72.829605,5656.7764};
				angles[]={6.2432065,3.5011036,0.14154659};
			};
			side="Empty";
			flags=4;
			class Attributes
			{
			};
			id=14;
			type="Land_HBarrier_5_F";
		};
		class Item11
		{
			dataType="Object";
			class PositionInfo
			{
				position[]={2440.4409,72.434532,5659.1353};
				angles[]={6.1367421,3.6800966,0.18293154};
			};
			side="Empty";
			flags=4;
			class Attributes
			{
			};
			id=15;
			type="Land_HBarrier_5_F";
		};
		class Item12
		{
			dataType="Object";
			class PositionInfo
			{
				position[]={2461.2021,74.381371,5659.9756};
				angles[]={6.2756844,2.6497939,0.01749678};
			};
			side="Empty";
			flags=4;
			class Attributes
			{
			};
			id=16;
			type="Land_HBarrier_5_F";
		};
		class Item13
		{
			dataType="Object";
			class PositionInfo
			{
				position[]={2465.5295,74.468468,5663.2241};
				angles[]={6.270689,2.3314688,0.0049914722};
			};
			side="Empty";
			flags=4;
			class Attributes
			{
			};
			id=17;
			type="Land_HBarrier_5_F";
		};
		class Item14
		{
			dataType="Object";
			class PositionInfo
			{
				position[]={2467.2031,74.522095,5668.2104};
				angles[]={6.2756844,4.7056565,0};
			};
			side="Empty";
			flags=4;
			class Attributes
			{
			};
			id=18;
			type="Land_HBarrier_5_F";
		};
		class Item15
		{
			dataType="Marker";
			position[]={2455.1951,73.625,5665.6919};
			name="vehicleSpawn1";
			type="Empty";
			id=19;
			atlOffset=-0.00020599365;
		};
		class Item16
		{
			dataType="Object";
			class PositionInfo
			{
				position[]={2176.4009,5.9154716,5764.8711};
				angles[]={0.0075049158,0,0.0049916417};
			};
			side="Empty";
			class Attributes
			{
				name="enemyArea1";
			};
			id=28;
			type="Land_HelipadEmpty_F";
		};
		class Item17
		{
			dataType="Object";
			class PositionInfo
			{
				position[]={2081.6331,6.73,5607.3691};
			};
			side="Empty";
			class Attributes
			{
				name="enemyArea2";
			};
			id=29;
			type="Land_HelipadEmpty_F";
		};
		class Item18
		{
			dataType="Object";
			class PositionInfo
			{
				position[]={2453.1189,73.574074,5666.958};
			};
			side="Empty";
			class Attributes
			{
				name="wheeledSpot";
			};
			id=30;
			type="Land_HelipadEmpty_F";
			atlOffset=7.6293945e-006;
		};
		class Item19
		{
			dataType="Object";
			class PositionInfo
			{
				position[]={2454.1389,74.8815,5646.1621};
				angles[]={0.12435512,0,0.15377705};
			};
			side="Empty";
			flags=4;
			class Attributes
			{
				name="wheeledFace";
			};
			id=44;
			type="Sign_Arrow_Large_Yellow_F";
		};
	};
};
